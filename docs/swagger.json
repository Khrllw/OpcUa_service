{
    "swagger": "2.0",
    "info": {
        "description": "API для работы с протоколом OPC UA",
        "title": "OpcUaService API",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/polling/start": {
            "get": {
                "description": "Запускает опрос OPC UA для конкретного станка по UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polling"
                ],
                "summary": "Запустить мониторинг станка",
                "parameters": [
                    {
                        "description": "UUID станка",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisconnectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Мониторинг запущен",
                        "schema": {
                            "$ref": "#/definitions/models.PollingResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/handlers.IncorrectFormatError"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/handlers.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.InternalServerError"
                        }
                    }
                }
            }
        },
        "/api/v1/polling/stop": {
            "get": {
                "description": "Останавливает опрос OPC UA для конкретного станка по UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polling"
                ],
                "summary": "Остановить мониторинг станка",
                "parameters": [
                    {
                        "description": "UUID станка",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisconnectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Мониторинг запущен",
                        "schema": {
                            "$ref": "#/definitions/models.PollingResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/handlers.IncorrectFormatError"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/handlers.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.InternalServerError"
                        }
                    }
                }
            }
        },
        "/connect": {
            "get": {
                "description": "Возвращает список активных соединений в пуле OPC UA",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connection"
                ],
                "summary": "Получить пул соединений",
                "responses": {
                    "200": {
                        "description": "Список активных соединений",
                        "schema": {
                            "$ref": "#/definitions/models.GetConnectionPoolResponseSwagger"
                        }
                    }
                }
            },
            "post": {
                "description": "Подключение клиента для мониторинга станка: анонимно, по паролю или по сертификату. Передаётся JSON с данными для входа.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connection"
                ],
                "summary": "Подключение клиента",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConnectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное подключение",
                        "schema": {
                            "$ref": "#/definitions/models.UUIDResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса или некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/handlers.IncorrectFormatError"
                        }
                    },
                    "401": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/handlers.IncorrectDataError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.InternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Закрывает соединение OPC UA по UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connection"
                ],
                "summary": "Отключение сессии",
                "parameters": [
                    {
                        "description": "UUID для отключения",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DisconnectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное отключение",
                        "schema": {
                            "$ref": "#/definitions/models.DisconnectResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/handlers.IncorrectFormatError"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/handlers.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.InternalServerError"
                        }
                    }
                }
            }
        },
        "/connect/check": {
            "post": {
                "description": "Проверяет состояние соединения OPC UA по UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connection"
                ],
                "summary": "Проверка соединения",
                "parameters": [
                    {
                        "description": "UUID для проверки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CheckConnectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о подключении",
                        "schema": {
                            "$ref": "#/definitions/models.CheckConnectionResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/handlers.IncorrectFormatError"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/handlers.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.InternalServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.IncorrectDataError": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 401
                        },
                        "message": {
                            "type": "string",
                            "example": "Некорректные данные"
                        }
                    }
                },
                "status": {
                    "description": "error",
                    "type": "string",
                    "example": "IncorrectDataError"
                }
            }
        },
        "handlers.IncorrectFormatError": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 400
                        },
                        "message": {
                            "type": "string",
                            "example": "Неверный формат запроса"
                        }
                    }
                },
                "status": {
                    "description": "error",
                    "type": "string",
                    "example": "IncorrectFormatError"
                }
            }
        },
        "handlers.InternalServerError": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 500
                        },
                        "message": {
                            "type": "string",
                            "example": "Внутренняя ошибка сервера"
                        }
                    }
                },
                "status": {
                    "description": "error",
                    "type": "string",
                    "example": "InternalServerError"
                }
            }
        },
        "handlers.NotFoundError": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 404
                        },
                        "message": {
                            "type": "string",
                            "example": "Данные не найдены"
                        }
                    }
                },
                "status": {
                    "description": "error",
                    "type": "string",
                    "example": "NotFoundError"
                }
            }
        },
        "models.CheckConnectionRequest": {
            "type": "object",
            "required": [
                "UUID"
            ],
            "properties": {
                "UUID": {
                    "type": "string"
                }
            }
        },
        "models.CheckConnectionResponseSwagger": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/models.ConnectionInfoResponse"
                        },
                        "message": {
                            "type": "string",
                            "example": "Successfully get connection info"
                        },
                        "type": {
                            "type": "string",
                            "example": "object"
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "models.ConnectionConfig": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "Type   ConnectionTypeEnum"
                }
            }
        },
        "models.ConnectionInfoResponse": {
            "type": "object",
            "properties": {
                "UUID": {
                    "type": "string"
                },
                "config": {
                    "$ref": "#/definitions/models.ConnectionConfig"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2025-08-22T12:00:00Z"
                },
                "description": {
                    "type": "string"
                },
                "lastUsed": {
                    "type": "string",
                    "example": "2025-08-22T12:05:00Z"
                },
                "sessionID": {
                    "type": "string",
                    "example": "ns=3;i=3093118269"
                },
                "status": {
                    "$ref": "#/definitions/models.ConnectionStatusEnum"
                },
                "useCount": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.ConnectionPoolResponse": {
            "type": "object",
            "properties": {
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConnectionInfoResponse"
                    }
                },
                "poolSize": {
                    "type": "integer"
                }
            }
        },
        "models.ConnectionRequest": {
            "type": "object",
            "required": [
                "connectionType",
                "manufacturer",
                "model"
            ],
            "properties": {
                "certificate": {
                    "description": "для certificate",
                    "type": "string",
                    "example": "cert-abc-123"
                },
                "connectionType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ConnectionTypeEnum"
                        }
                    ],
                    "example": "password"
                },
                "endpointURL": {
                    "type": "string",
                    "example": "opc.tcp://KHRLLW_-340595:4840/HEIDENHAIN/NC"
                },
                "key": {
                    "type": "string",
                    "example": "secret"
                },
                "manufacturer": {
                    "type": "string",
                    "example": "Heidenhain"
                },
                "mode": {
                    "description": "OPC UA MessageSecurityMode",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.MessageSecurityModeEnum"
                        }
                    ],
                    "example": "SignAndEncrypt"
                },
                "model": {
                    "type": "string",
                    "example": "TNC640"
                },
                "password": {
                    "description": "для password",
                    "type": "string",
                    "example": "secret"
                },
                "policy": {
                    "description": "OPC UA SecurityPolicy",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SecurityPolicyEnum"
                        }
                    ],
                    "example": "Basic256Sha256"
                },
                "timeout": {
                    "type": "integer",
                    "example": 30
                },
                "username": {
                    "description": "для password",
                    "type": "string",
                    "example": "client1"
                }
            }
        },
        "models.ConnectionStatusEnum": {
            "type": "string",
            "enum": [
                "OK",
                "FAIL",
                "NOT FOUND",
                "HEALTHY",
                "UNHEALTHY",
                "CONNECTED",
                "DISCONNECTED",
                "ERROR",
                "TIMEOUT",
                "AUTH_FAILED"
            ],
            "x-enum-comments": {
                "StatusAuthFailed": "Ошибка аутентификации",
                "StatusConnected": "Соединение установлено",
                "StatusDisconnected": "Соединение разорвано",
                "StatusError": "Ошибка соединения",
                "StatusHealthy": "Соединение здорово и работает",
                "StatusTimeout": "Таймаут соединения",
                "StatusUnhealthy": "Соединение есть, но есть проблемы"
            },
            "x-enum-descriptions": [
                "",
                "",
                "",
                "Соединение здорово и работает",
                "Соединение есть, но есть проблемы",
                "Соединение установлено",
                "Соединение разорвано",
                "Ошибка соединения",
                "Таймаут соединения",
                "Ошибка аутентификации"
            ],
            "x-enum-varnames": [
                "StatusOK",
                "StatusFail",
                "StatusNotFound",
                "StatusHealthy",
                "StatusUnhealthy",
                "StatusConnected",
                "StatusDisconnected",
                "StatusError",
                "StatusTimeout",
                "StatusAuthFailed"
            ]
        },
        "models.ConnectionTypeEnum": {
            "type": "string",
            "enum": [
                "anonymous",
                "password",
                "certificate"
            ],
            "x-enum-varnames": [
                "ConnectionAnonymous",
                "ConnectionPassword",
                "ConnectionCertificate"
            ]
        },
        "models.DisconnectRequest": {
            "type": "object",
            "required": [
                "UUID"
            ],
            "properties": {
                "UUID": {
                    "type": "string"
                }
            }
        },
        "models.DisconnectResponse": {
            "type": "object",
            "required": [
                "disconnected"
            ],
            "properties": {
                "disconnected": {
                    "type": "boolean"
                }
            }
        },
        "models.DisconnectResponseSwagger": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/models.DisconnectResponse"
                        },
                        "message": {
                            "type": "string",
                            "example": "Successfully disconnected"
                        },
                        "type": {
                            "type": "string",
                            "example": "object"
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "models.GetConnectionPoolResponseSwagger": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/models.ConnectionPoolResponse"
                        },
                        "message": {
                            "type": "string",
                            "example": "Successfully get connection pool"
                        },
                        "type": {
                            "type": "string",
                            "example": "object"
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "models.MessageSecurityModeEnum": {
            "type": "string",
            "enum": [
                "None",
                "Sign",
                "SignAndEncrypt"
            ],
            "x-enum-varnames": [
                "ModeNone",
                "ModeSign",
                "ModeSignAndEncrypt"
            ]
        },
        "models.PollingResponse": {
            "type": "object",
            "required": [
                "polled"
            ],
            "properties": {
                "polled": {
                    "type": "boolean"
                }
            }
        },
        "models.PollingResponseSwagger": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/models.PollingResponse"
                        },
                        "message": {
                            "type": "string",
                            "example": "Polling started/stopped for machine"
                        },
                        "type": {
                            "type": "string",
                            "example": "object"
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "models.SecurityPolicyEnum": {
            "type": "string",
            "enum": [
                "None",
                "Basic128Rsa15",
                "Basic256",
                "Basic256Sha256"
            ],
            "x-enum-varnames": [
                "PolicyNone",
                "PolicyBasic128Rsa15",
                "PolicyBasic256",
                "PolicyBasic256Sha256"
            ]
        },
        "models.UUIDResponse": {
            "type": "object",
            "required": [
                "UUID"
            ],
            "properties": {
                "UUID": {
                    "type": "string"
                }
            }
        },
        "models.UUIDResponseSwagger": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/models.UUIDResponse"
                        },
                        "message": {
                            "type": "string",
                            "example": "Successfully connected"
                        },
                        "type": {
                            "type": "string",
                            "example": "object"
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        }
    }
}